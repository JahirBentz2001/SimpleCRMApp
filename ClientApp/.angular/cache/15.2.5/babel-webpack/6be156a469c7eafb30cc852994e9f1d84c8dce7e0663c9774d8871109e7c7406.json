{"ast":null,"code":"import Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api/services\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nconst _c0 = function (a1) {\n  return [\"/update-customer\", a1];\n};\nfunction HomeComponent_ng_container_2_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"a\", 7);\n    i0.ɵɵtext(9, \" fa4- Edit \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 8);\n    i0.ɵɵtext(11, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const customer_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(customer_r4.firstName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(customer_r4.lastName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(customer_r4.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(4, _c0, customer_r4.id));\n  }\n}\nfunction HomeComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"h1\", 4);\n    i0.ɵɵtext(2, \"Customers List\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"table\", 5)(4, \"thead\")(5, \"tr\")(6, \"th\");\n    i0.ɵɵtext(7, \"First Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\");\n    i0.ɵɵtext(9, \"Last Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\");\n    i0.ɵɵtext(11, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"th\");\n    i0.ɵɵtext(13, \"Options\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(14, \"tbody\");\n    i0.ɵɵtemplate(15, HomeComponent_ng_container_2_tr_15_Template, 12, 6, \"tr\", 6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(15);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.customers);\n  }\n}\nfunction HomeComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 9);\n    i0.ɵɵtext(1, \"There are no customers\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class HomeComponent {\n  constructor(customerService) {\n    this.customerService = customerService;\n    this.customers = [];\n    this.handleError = error => {\n      Swal.fire({\n        icon: 'error',\n        title: 'Something went wrong!',\n        text: `Something unexpected happened. Status code: ${error.status}`\n      });\n    };\n  }\n  ngOnInit() {\n    this.getList();\n  }\n  getList() {\n    this.customerService.listCustomer().subscribe({\n      next: customers => this.customers = customers,\n      error: err => this.handleError\n    });\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.CustomerService));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 5,\n  vars: 2,\n  consts: [[1, \"columns\", \"is-centered\", \"is-vcentered\"], [1, \"column\", \"is-half\"], [4, \"ngIf\", \"ngIfElse\"], [\"emptyList\", \"\"], [1, \"title\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [1, \"button\", \"is-small\", \"is-info\", \"mr-2\", 3, \"routerLink\"], [1, \"button\", \"is-small\", \"is-danger\"], [1, \"has-text-danger\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵtemplate(2, HomeComponent_ng_container_2_Template, 16, 1, \"ng-container\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(3, HomeComponent_ng_template_3_Template, 2, 0, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(4);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.customers.length > 0)(\"ngIfElse\", _r1);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.RouterLink],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAIA,OAAOA,IAAI,MAAM,aAAa;;;;;;;;;;ICWpBC,0BAAuC;IACjCA,YAAwB;IAAAA,iBAAK;IACjCA,0BAAI;IAAAA,YAAuB;IAAAA,iBAAK;IAChCA,0BAAI;IAAAA,YAAoB;IAAAA,iBAAK;IAC7BA,0BAAI;IAEAA,2BAEF;IAAAA,iBAAI;IACJA,kCAA0C;IAAAA,uBAAM;IAAAA,iBAAS;;;;IARvDA,eAAwB;IAAxBA,2CAAwB;IACxBA,eAAuB;IAAvBA,0CAAuB;IACvBA,eAAoB;IAApBA,uCAAoB;IAEkBA,eAAgD;IAAhDA,uEAAgD;;;;;IAjBlGA,6BAA2D;IACzDA,6BAAkB;IAAAA,8BAAc;IAAAA,iBAAK;IACrCA,gCAAqB;IAGXA,0BAAU;IAAAA,iBAAK;IACnBA,0BAAI;IAAAA,yBAAS;IAAAA,iBAAK;IAClBA,2BAAI;IAAAA,sBAAK;IAAAA,iBAAK;IACdA,2BAAI;IAAAA,wBAAO;IAAAA,iBAAK;IAGpBA,8BAAO;IACLA,8EAeK;IACPA,iBAAQ;IAEZA,0BAAe;;;;IAlBgBA,gBAAY;IAAZA,0CAAY;;;;;IAuB7CA,4BAA2B;IAAAA,sCAAsB;IAAAA,iBAAI;;;AD5BvD,OAAM,MAAOC,aAAa;EAIxBC,YAAoBC,eAAgC;IAAhC,oBAAe,GAAfA,eAAe;IAFnC,cAAS,GAAiB,EAAE;IAgBpB,gBAAW,GAAIC,KAAU,IAAI;MACnCL,IAAI,CAACM,IAAI,CAAC;QACRC,IAAI,EAAE,OAAO;QACbC,KAAK,EAAE,uBAAuB;QAC9BC,IAAI,EAAE,+CAA+CJ,KAAK,CAACK,MAAM;OAClE,CAAC;IACJ,CAAC;EApBuD;EAExDC,QAAQ;IACN,IAAI,CAACC,OAAO,EAAE;EAChB;EAEOA,OAAO;IACZ,IAAI,CAACR,eAAe,CAACS,YAAY,EAAE,CAChCC,SAAS,CAAC;MACTC,IAAI,EAAGC,SAAS,IAAK,IAAI,CAACA,SAAS,GAAGA,SAAS;MAC/CX,KAAK,EAAGY,GAAG,IAAK,IAAI,CAACC;KACtB,CAAC;EACN;;AAhBWhB,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAiB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT1BtB,8BAA8C;MAE1CA,iFA8Be;MACjBA,iBAAM;MAGRA,+GAEc;;;;MApCKA,eAA4B;MAA5BA,+CAA4B","names":["Swal","i0","HomeComponent","constructor","customerService","error","fire","icon","title","text","status","ngOnInit","getList","listCustomer","subscribe","next","customers","err","handleError","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/jahir_benitez/Development/CRMApp/ClientApp/src/app/home/home.component.ts","/home/jahir_benitez/Development/CRMApp/ClientApp/src/app/home/home.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { CustomerRm } from '../api/models';\r\nimport { CustomerService } from '../api/services';\r\n\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  customers: CustomerRm[] = [];\r\n\r\n  constructor(private customerService: CustomerService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getList();\r\n  }\r\n\r\n  public getList(){\r\n    this.customerService.listCustomer()\r\n      .subscribe({\r\n        next: (customers) => this.customers = customers,\r\n        error: (err) => this.handleError\r\n      });\r\n  }\r\n\r\n  private handleError = (error: any) => {\r\n    Swal.fire({\r\n      icon: 'error',\r\n      title: 'Something went wrong!',\r\n      text: `Something unexpected happened. Status code: ${error.status}`\r\n    });\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"columns is-centered is-vcentered\">\r\n  <div class=\"column is-half\"> \r\n    <ng-container *ngIf=\"customers.length > 0; else emptyList\">\r\n      <h1 class=\"title\">Customers List</h1>\r\n      <table class=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>First Name</th>\r\n            <th>Last Name</th>\r\n            <th>Email</th>\r\n            <th>Options</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let customer of customers\">\r\n            <td>{{ customer.firstName }}</td>\r\n            <td>{{ customer.lastName }}</td>\r\n            <td>{{ customer.email }}</td>\r\n            <td>\r\n              <a class=\"button is-small is-info mr-2\" [routerLink]=\"['/update-customer', customer.id]\">\r\n                fa4-\r\n                Edit\r\n              </a>\r\n              <button class=\"button is-small is-danger\">Delete</button>\r\n              <!--\r\n              <a class=\"button is-small is-info\" [routerLink]=\"['/customers', customer.id]\">Edit</a>\r\n              <button class=\"button is-small is-danger\" (click)=\"deleteCustomer(customer.id)\">Delete</button>\r\n              -->\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #emptyList>\r\n  <p class=\"has-text-danger\">There are no customers</p>\r\n</ng-template>\r\n<!--\r\n<h1>Hello, world!</h1>\r\n<p>Welcome to your new single-page application, built with:</p>\r\n<ul>\r\n  <li><a href='https://get.asp.net/'>ASP.NET Core</a> and <a href='https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx'>C#</a> for cross-platform server-side code</li>\r\n  <li><a href='https://angular.io/'>Angular</a> and <a href='http://www.typescriptlang.org/'>TypeScript</a> for client-side code</li>\r\n  <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\r\n</ul>\r\n<p>To help you get started, we've also set up:</p>\r\n<ul>\r\n  <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\r\n  <li><strong>Angular CLI integration</strong>. In development mode, there's no need to run <code>ng serve</code>. It runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file.</li>\r\n  <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and your <code>dotnet publish</code> configuration automatically invokes <code>ng build</code> to produce minified, ahead-of-time compiled JavaScript files.</li>\r\n</ul>\r\n<p>The <code>ClientApp</code> subdirectory is a standard Angular CLI application. If you open a command prompt in that directory, you can run any <code>ng</code> command (e.g., <code>ng test</code>), or use <code>npm</code> to install extra packages into it.</p>\r\n-->"]},"metadata":{},"sourceType":"module","externalDependencies":[]}