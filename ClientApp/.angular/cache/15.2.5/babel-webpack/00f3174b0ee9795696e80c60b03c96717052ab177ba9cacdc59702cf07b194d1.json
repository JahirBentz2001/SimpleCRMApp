{"ast":null,"code":"import Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api/services\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class UpdateCustomerComponent {\n  constructor(customerService, activatedRoute, formBuilder, router) {\n    this.customerService = customerService;\n    this.activatedRoute = activatedRoute;\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.customerRm = {};\n    this.form = this.formBuilder.group({\n      id: [''],\n      firstName: [''],\n      lastName: [''],\n      email: ['']\n    });\n    this.customerNotFound = error => {\n      Swal.fire({\n        icon: 'error',\n        title: 'Customer not found',\n        text: 'The customer you are looking for does not exist',\n        confirmButtonText: 'Ok'\n      }).then(() => this.router.navigate(['/']));\n    };\n  }\n  ngOnInit() {\n    this.activatedRoute.params.subscribe(params => {\n      const customerId = params['id'];\n      this.getCustomerById(customerId);\n    });\n  }\n  getCustomerById(customerId) {\n    this.customerService.getCustomer({\n      id: customerId\n    }).subscribe({\n      next: customer => this.customerRm = customer,\n      error: this.customerNotFound\n    });\n  }\n}\nUpdateCustomerComponent.ɵfac = function UpdateCustomerComponent_Factory(t) {\n  return new (t || UpdateCustomerComponent)(i0.ɵɵdirectiveInject(i1.CustomerService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i2.Router));\n};\nUpdateCustomerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateCustomerComponent,\n  selectors: [[\"app-update-customer\"]],\n  decls: 70,\n  vars: 0,\n  consts: [[1, \"hero\"], [1, \"hero-body\"], [1, \"container\"], [1, \"title\"], [1, \"field\"], [1, \"label\"], [1, \"control\"], [\"type\", \"text\", \"placeholder\", \"Text input\", 1, \"input\"], [1, \"control\", \"has-icons-left\", \"has-icons-right\"], [\"type\", \"text\", \"placeholder\", \"Text input\", \"value\", \"bulma\", 1, \"input\", \"is-success\"], [1, \"icon\", \"is-small\", \"is-left\"], [1, \"fas\", \"fa-user\"], [1, \"icon\", \"is-small\", \"is-right\"], [1, \"fas\", \"fa-check\"], [1, \"help\", \"is-success\"], [\"type\", \"email\", \"placeholder\", \"Email input\", \"value\", \"hello@\", 1, \"input\", \"is-danger\"], [1, \"fas\", \"fa-envelope\"], [1, \"fas\", \"fa-exclamation-triangle\"], [1, \"help\", \"is-danger\"], [1, \"select\"], [\"placeholder\", \"Textarea\", 1, \"textarea\"], [1, \"checkbox\"], [\"type\", \"checkbox\"], [\"href\", \"#\"], [1, \"radio\"], [\"type\", \"radio\", \"name\", \"question\"], [1, \"field\", \"is-grouped\"], [1, \"button\", \"is-link\"], [1, \"button\", \"is-text\"]],\n  template: function UpdateCustomerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h1\", 3);\n      i0.ɵɵtext(4, \" Update customer \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"form\")(6, \"div\", 4)(7, \"label\", 5);\n      i0.ɵɵtext(8, \" Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 6);\n      i0.ɵɵelement(10, \"input\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 4)(12, \"label\", 5);\n      i0.ɵɵtext(13, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 8);\n      i0.ɵɵelement(15, \"input\", 9);\n      i0.ɵɵelementStart(16, \"span\", 10);\n      i0.ɵɵelement(17, \"i\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"span\", 12);\n      i0.ɵɵelement(19, \"i\", 13);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"p\", 14);\n      i0.ɵɵtext(21, \"This username is available\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"div\", 4)(23, \"label\", 5);\n      i0.ɵɵtext(24, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"div\", 8);\n      i0.ɵɵelement(26, \"input\", 15);\n      i0.ɵɵelementStart(27, \"span\", 10);\n      i0.ɵɵelement(28, \"i\", 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"span\", 12);\n      i0.ɵɵelement(30, \"i\", 17);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(31, \"p\", 18);\n      i0.ɵɵtext(32, \"This email is invalid\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(33, \"div\", 4)(34, \"label\", 5);\n      i0.ɵɵtext(35, \"Subject\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"div\", 6)(37, \"div\", 19)(38, \"select\")(39, \"option\");\n      i0.ɵɵtext(40, \"Select dropdown\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"option\");\n      i0.ɵɵtext(42, \"With options\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(43, \"div\", 4)(44, \"label\", 5);\n      i0.ɵɵtext(45, \"Message\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(46, \"div\", 6);\n      i0.ɵɵelement(47, \"textarea\", 20);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(48, \"div\", 4)(49, \"div\", 6)(50, \"label\", 21);\n      i0.ɵɵelement(51, \"input\", 22);\n      i0.ɵɵtext(52, \" I agree to the \");\n      i0.ɵɵelementStart(53, \"a\", 23);\n      i0.ɵɵtext(54, \"terms and conditions\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(55, \"div\", 4)(56, \"div\", 6)(57, \"label\", 24);\n      i0.ɵɵelement(58, \"input\", 25);\n      i0.ɵɵtext(59, \" Yes \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(60, \"label\", 24);\n      i0.ɵɵelement(61, \"input\", 25);\n      i0.ɵɵtext(62, \" No \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(63, \"div\", 26)(64, \"div\", 6)(65, \"button\", 27);\n      i0.ɵɵtext(66, \"Submit\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(67, \"div\", 6)(68, \"button\", 28);\n      i0.ɵɵtext(69, \"Cancel\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.NgControlStatusGroup, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Swal","UpdateCustomerComponent","constructor","customerService","activatedRoute","formBuilder","router","group","id","firstName","lastName","email","error","fire","icon","title","text","confirmButtonText","then","navigate","ngOnInit","params","subscribe","customerId","getCustomerById","getCustomer","next","customer","customerRm","customerNotFound","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["/home/jahir_benitez/Development/CRMApp/ClientApp/src/app/update-customer/update-customer.component.ts","/home/jahir_benitez/Development/CRMApp/ClientApp/src/app/update-customer/update-customer.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { CustomerService } from '../api/services';\nimport { CustomerRm } from '../api/models';\nimport { CustomerDto } from '../api/models';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-update-customer',\n  templateUrl: './update-customer.component.html',\n  styleUrls: ['./update-customer.component.css']\n})\nexport class UpdateCustomerComponent implements OnInit {\n\n  constructor(\n    private customerService: CustomerService,\n    private activatedRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private router: Router\n  ){}\n\n  customerRm: CustomerRm = {};\n\n  form = this.formBuilder.group({\n    id: [''],\n    firstName: [''],\n    lastName: [''],\n    email: [''],\n  });\n\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(params => {\n      const customerId = params['id'];\n      this.getCustomerById(customerId);\n    });\n  }\n\n  getCustomerById(customerId: string) {\n    this.customerService.getCustomer({ id: customerId })\n      .subscribe({\n        next: (customer) => this.customerRm = customer,\n        error: this.customerNotFound\n      });\n  }\n\n  private customerNotFound = (error: any) => {\n    Swal.fire({\n      icon: 'error',\n      title: 'Customer not found',\n      text: 'The customer you are looking for does not exist',\n      confirmButtonText: 'Ok'\n    })\n    .then(() => this.router.navigate(['/']));\n  }\n\n}\n","\n<section class=\"hero\">\n  <div class=\"hero-body\">\n    <div class=\"container\">\n      <h1 class=\"title\">\n        Update customer\n      </h1>\n      <form>\n        <div class=\"field\">\n          <label class=\"label\">\n        Name</label>\n          <div class=\"control\">\n            <input class=\"input\" type=\"text\" placeholder=\"Text input\">\n          </div>\n        </div>\n        \n        <div class=\"field\">\n          <label class=\"label\">Username</label>\n          <div class=\"control has-icons-left has-icons-right\">\n            <input class=\"input is-success\" type=\"text\" placeholder=\"Text input\" value=\"bulma\">\n            <span class=\"icon is-small is-left\">\n              <i class=\"fas fa-user\"></i>\n            </span>\n            <span class=\"icon is-small is-right\">\n              <i class=\"fas fa-check\"></i>\n            </span>\n          </div>\n          <p class=\"help is-success\">This username is available</p>\n        </div>\n        \n        <div class=\"field\">\n          <label class=\"label\">Email</label>\n          <div class=\"control has-icons-left has-icons-right\">\n            <input class=\"input is-danger\" type=\"email\" placeholder=\"Email input\" value=\"hello@\">\n            <span class=\"icon is-small is-left\">\n              <i class=\"fas fa-envelope\"></i>\n            </span>\n            <span class=\"icon is-small is-right\">\n              <i class=\"fas fa-exclamation-triangle\"></i>\n            </span>\n          </div>\n          <p class=\"help is-danger\">This email is invalid</p>\n        </div>\n        \n        <div class=\"field\">\n          <label class=\"label\">Subject</label>\n          <div class=\"control\">\n            <div class=\"select\">\n              <select>\n                <option>Select dropdown</option>\n                <option>With options</option>\n              </select>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"field\">\n          <label class=\"label\">Message</label>\n          <div class=\"control\">\n            <textarea class=\"textarea\" placeholder=\"Textarea\"></textarea>\n          </div>\n        </div>\n        \n        <div class=\"field\">\n          <div class=\"control\">\n            <label class=\"checkbox\">\n              <input type=\"checkbox\">\n              I agree to the <a href=\"#\">terms and conditions</a>\n            </label>\n          </div>\n        </div>\n        \n        <div class=\"field\">\n          <div class=\"control\">\n            <label class=\"radio\">\n              <input type=\"radio\" name=\"question\">\n              Yes\n            </label>\n            <label class=\"radio\">\n              <input type=\"radio\" name=\"question\">\n              No\n            </label>\n          </div>\n        </div>\n        \n        <div class=\"field is-grouped\">\n          <div class=\"control\">\n            <button class=\"button is-link\">Submit</button>\n          </div>\n          <div class=\"control\">\n            <button class=\"button is-text\">Cancel</button>\n          </div>\n        </div>\n        \n      </form>\n    </div>\n  </div>\n</section>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}