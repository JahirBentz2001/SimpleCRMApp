{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api/services\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction AddCustomerComponent_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 17);\n    i0.ɵɵtext(1, \"Invalid First Name\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddCustomerComponent_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 17);\n    i0.ɵɵtext(1, \"Invalid Last Name\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddCustomerComponent_span_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 17);\n    i0.ɵɵtext(1, \"Invalid Email\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a1) {\n  return {\n    \"input\": true,\n    \"is-danger\": a1\n  };\n};\nconst _c1 = function () {\n  return [\"/\"];\n};\nexport class AddCustomerComponent {\n  constructor(customerService, router) {\n    this.customerService = customerService;\n    this.router = router;\n    this.formGroup = new FormGroup({\n      firstName: new FormControl('', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(50)])),\n      lastName: new FormControl('', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(75)])),\n      email: new FormControl('', Validators.compose([Validators.required, Validators.email, Validators.minLength(5), Validators.maxLength(100)]))\n    });\n    this.handleError = error => {};\n  }\n  addCustomer() {}\n  // Form validations\n  get invalidFirstName() {\n    return this.formGroup.controls.firstName.invalid && (this.formGroup.controls.firstName.dirty || this.formGroup.controls.firstName.touched);\n  }\n  get invalidLastName() {\n    return this.formGroup.controls.lastName.invalid && (this.formGroup.controls.lastName.dirty || this.formGroup.controls.lastName.touched);\n  }\n  get invalidEmail() {\n    return this.formGroup.controls.email.invalid && (this.formGroup.controls.email.dirty || this.formGroup.controls.email.touched);\n  }\n}\nAddCustomerComponent.ɵfac = function AddCustomerComponent_Factory(t) {\n  return new (t || AddCustomerComponent)(i0.ɵɵdirectiveInject(i1.CustomerService), i0.ɵɵdirectiveInject(i2.Router));\n};\nAddCustomerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddCustomerComponent,\n  selectors: [[\"app-add-customer\"]],\n  decls: 31,\n  vars: 16,\n  consts: [[1, \"hero\"], [1, \"hero-body\"], [1, \"container\"], [1, \"title\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"field\", 2, \"width\", \"20rem\"], [1, \"label\"], [1, \"control\", \"has-icons-right\"], [\"formControlName\", \"firstName\", \"type\", \"text\", \"placeholder\", \"First Name\", 3, \"ngClass\"], [\"class\", \"has-text-danger\", 4, \"ngIf\"], [\"formControlName\", \"lastName\", \"type\", \"text\", \"placeholder\", \"Last Name\", 3, \"ngClass\"], [\"formControlName\", \"email\", \"type\", \"email\", \"placeholder\", \"example@mail.com\", 3, \"ngClass\"], [1, \"field\"], [1, \"control\"], [\"type\", \"submit\", 1, \"button\", \"is-success\", 3, \"disabled\"], [1, \"control\", \"mt-2\"], [3, \"routerLink\"], [1, \"has-text-danger\"]],\n  template: function AddCustomerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h1\", 3);\n      i0.ɵɵtext(4, \" Add customer \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"form\", 4);\n      i0.ɵɵlistener(\"ngSubmit\", function AddCustomerComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.addCustomer();\n      });\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"label\", 6);\n      i0.ɵɵtext(8, \"First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 7);\n      i0.ɵɵelement(10, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, AddCustomerComponent_span_11_Template, 2, 0, \"span\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 5)(13, \"label\", 6);\n      i0.ɵɵtext(14, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 7);\n      i0.ɵɵelement(16, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(17, AddCustomerComponent_span_17_Template, 2, 0, \"span\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 5)(19, \"label\", 6);\n      i0.ɵɵtext(20, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\", 7);\n      i0.ɵɵelement(22, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(23, AddCustomerComponent_span_23_Template, 2, 0, \"span\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 12)(25, \"div\", 13)(26, \"button\", 14);\n      i0.ɵɵtext(27, \"Add customer\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(28, \"div\", 15)(29, \"a\", 16);\n      i0.ɵɵtext(30, \"Back to List\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, ctx.invalidFirstName));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.invalidFirstName);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c0, ctx.invalidLastName));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.invalidLastName);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(13, _c0, ctx.invalidEmail));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.invalidEmail);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", ctx.formGroup.invalid);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(15, _c1));\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i2.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormGroup","FormControl","Validators","i0","AddCustomerComponent","constructor","customerService","router","firstName","compose","required","minLength","maxLength","lastName","email","error","addCustomer","invalidFirstName","formGroup","controls","invalid","dirty","touched","invalidLastName","invalidEmail","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/jahir_benitez/Development/CRMApp/ClientApp/src/app/add-customer/add-customer.component.ts","/home/jahir_benitez/Development/CRMApp/ClientApp/src/app/add-customer/add-customer.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CustomerDto } from '../api/models';\nimport { CustomerService } from '../api/services';\n\n@Component({\n  selector: 'app-add-customer',\n  templateUrl: './add-customer.component.html',\n  styleUrls: ['./add-customer.component.css']\n})\nexport class AddCustomerComponent {\n\n  constructor(\n    private customerService: CustomerService,\n    private router: Router){}\n\n  formGroup = new FormGroup({\n    firstName: new FormControl('', Validators.compose([\n      Validators.required,\n      Validators.minLength(3),\n      Validators.maxLength(50)\n    ])),\n    lastName: new FormControl('', Validators.compose([\n      Validators.required,\n      Validators.minLength(3),\n      Validators.maxLength(75)\n    ])),\n    email: new FormControl('', Validators.compose([\n      Validators.required,\n      Validators.email,\n      Validators.minLength(5),\n      Validators.maxLength(100)\n    ]))\n  });\n\n  addCustomer(){\n\n  }\n\n  private handleError = (error: any) => {\n    \n  }\n\n  // Form validations\n  get invalidFirstName(){\n    return this.formGroup.controls.firstName.invalid \n      && (this.formGroup.controls.firstName.dirty || this.formGroup.controls.firstName.touched);\n  }\n\n  get invalidLastName(){\n    return this.formGroup.controls.lastName.invalid \n      && (this.formGroup.controls.lastName.dirty || this.formGroup.controls.lastName.touched);\n  }\n\n  get invalidEmail(){\n    return this.formGroup.controls.email.invalid \n      && (this.formGroup.controls.email.dirty || this.formGroup.controls.email.touched);\n  }\n\n  \n\n}\n","<section class=\"hero\">\n    <div class=\"hero-body\">\n      <div class=\"container\">\n        <h1 class=\"title\">\n          Add customer\n        </h1>\n        <form [formGroup]=\"formGroup\" (ngSubmit)=\"addCustomer()\">\n            <div class=\"field\" style=\"width: 20rem;\">\n                <label class=\"label\">First Name</label>\n                <div class=\"control has-icons-right\">\n                    <input \n                        formControlName=\"firstName\" \n                        [ngClass]=\"{ \n                            'input': true,\n                            'is-danger': invalidFirstName\n                        }\"\n                        type=\"text\" \n                        placeholder=\"First Name\" />\n                </div>\n                <span class=\"has-text-danger\" *ngIf=\"invalidFirstName\">Invalid First Name</span>\n            </div>\n            <div class=\"field\" style=\"width: 20rem;\">\n                <label class=\"label\">Last Name</label>\n                <div class=\"control has-icons-right\">\n                    <input \n                        formControlName=\"lastName\" \n                        [ngClass]=\"{ \n                            'input': true,\n                            'is-danger': invalidLastName\n                        }\"\n                        type=\"text\" \n                        placeholder=\"Last Name\" />\n                </div>\n                <span class=\"has-text-danger\" *ngIf=\"invalidLastName\">Invalid Last Name</span>\n            </div>\n            <div class=\"field\" style=\"width: 20rem;\">\n                <label class=\"label\">Email</label>\n                <div class=\"control has-icons-right\">\n                    <input \n                        formControlName=\"email\" \n                        [ngClass]=\"{ \n                            'input': true,\n                            'is-danger': invalidEmail\n                        }\"\n                        type=\"email\" \n                        placeholder=\"example@mail.com\" />\n                </div>\n                <span class=\"has-text-danger\" *ngIf=\"invalidEmail\">Invalid Email</span>\n            </div>\n            <div class=\"field\">\n                <div class=\"control\">\n                    <button \n                        type=\"submit\" \n                        class=\"button is-success\"\n                        [disabled]=\"formGroup.invalid\">Add customer</button>\n                </div>\n                <div class=\"control mt-2\">\n                    <a [routerLink]=\"['/']\">Back to List</a>\n                </div>\n            </div>\n        </form>\n      </div>\n    </div>\n</section>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}