{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nlet AddCustomerComponent = class AddCustomerComponent {\n  constructor(customerService, router) {\n    this.customerService = customerService;\n    this.router = router;\n    this.formGroup = new FormGroup({\n      firstName: new FormControl('', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(50)])),\n      lastName: new FormControl('', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(75)])),\n      email: new FormControl('', Validators.compose([Validators.required, Validators.email, Validators.minLength(5), Validators.maxLength(100)]))\n    });\n  }\n  addCustomer() {}\n  // Form validations\n  get invalidFirstName() {\n    return this.formGroup.controls.firstName.invalid && (this.formGroup.controls.firstName.dirty || this.formGroup.controls.firstName.touched);\n  }\n  get invalidLastName() {\n    return this.formGroup.controls.lastName.invalid && (this.formGroup.controls.lastName.dirty || this.formGroup.controls.lastName.touched);\n  }\n  get invalidEmail() {\n    return this.formGroup.controls.email.invalid && (this.formGroup.controls.email.dirty || this.formGroup.controls.email.touched);\n  }\n};\nAddCustomerComponent = __decorate([Component({\n  selector: 'app-add-customer',\n  templateUrl: './add-customer.component.html',\n  styleUrls: ['./add-customer.component.css']\n})], AddCustomerComponent);\nexport { AddCustomerComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;AAU5D,IAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAE/BC,YACUC,eAAgC,EAChCC,MAAc;IADd,oBAAe,GAAfD,eAAe;IACf,WAAM,GAANC,MAAM;IAEhB,cAAS,GAAG,IAAIN,SAAS,CAAC;MACxBO,SAAS,EAAE,IAAIN,WAAW,CAAC,EAAE,EAAEC,UAAU,CAACM,OAAO,CAAC,CAChDN,UAAU,CAACO,QAAQ,EACnBP,UAAU,CAACQ,SAAS,CAAC,CAAC,CAAC,EACvBR,UAAU,CAACS,SAAS,CAAC,EAAE,CAAC,CACzB,CAAC,CAAC;MACHC,QAAQ,EAAE,IAAIX,WAAW,CAAC,EAAE,EAAEC,UAAU,CAACM,OAAO,CAAC,CAC/CN,UAAU,CAACO,QAAQ,EACnBP,UAAU,CAACQ,SAAS,CAAC,CAAC,CAAC,EACvBR,UAAU,CAACS,SAAS,CAAC,EAAE,CAAC,CACzB,CAAC,CAAC;MACHE,KAAK,EAAE,IAAIZ,WAAW,CAAC,EAAE,EAAEC,UAAU,CAACM,OAAO,CAAC,CAC5CN,UAAU,CAACO,QAAQ,EACnBP,UAAU,CAACW,KAAK,EAChBX,UAAU,CAACQ,SAAS,CAAC,CAAC,CAAC,EACvBR,UAAU,CAACS,SAAS,CAAC,GAAG,CAAC,CAC1B,CAAC;KACH,CAAC;EAnBwB;EAqB1BG,WAAW,IAEX;EAEA;EACA,IAAIC,gBAAgB;IAClB,OAAO,IAAI,CAACC,SAAS,CAACC,QAAQ,CAACV,SAAS,CAACW,OAAO,KAC1C,IAAI,CAACF,SAAS,CAACC,QAAQ,CAACV,SAAS,CAACY,KAAK,IAAI,IAAI,CAACH,SAAS,CAACC,QAAQ,CAACV,SAAS,CAACa,OAAO,CAAC;EAC7F;EAEA,IAAIC,eAAe;IACjB,OAAO,IAAI,CAACL,SAAS,CAACC,QAAQ,CAACL,QAAQ,CAACM,OAAO,KACzC,IAAI,CAACF,SAAS,CAACC,QAAQ,CAACL,QAAQ,CAACO,KAAK,IAAI,IAAI,CAACH,SAAS,CAACC,QAAQ,CAACL,QAAQ,CAACQ,OAAO,CAAC;EAC3F;EAEA,IAAIE,YAAY;IACd,OAAO,IAAI,CAACN,SAAS,CAACC,QAAQ,CAACJ,KAAK,CAACK,OAAO,KACtC,IAAI,CAACF,SAAS,CAACC,QAAQ,CAACJ,KAAK,CAACM,KAAK,IAAI,IAAI,CAACH,SAAS,CAACC,QAAQ,CAACJ,KAAK,CAACO,OAAO,CAAC;EACrF;CAID;AA/CYjB,oBAAoB,eALhCJ,SAAS,CAAC;EACTwB,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,GACWtB,oBAAoB,CA+ChC;SA/CYA,oBAAoB","names":["Component","FormGroup","FormControl","Validators","AddCustomerComponent","constructor","customerService","router","firstName","compose","required","minLength","maxLength","lastName","email","addCustomer","invalidFirstName","formGroup","controls","invalid","dirty","touched","invalidLastName","invalidEmail","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/jahir_benitez/Development/CRMApp/ClientApp/src/app/add-customer/add-customer.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CustomerDto } from '../api/models';\nimport { CustomerService } from '../api/services';\n\n@Component({\n  selector: 'app-add-customer',\n  templateUrl: './add-customer.component.html',\n  styleUrls: ['./add-customer.component.css']\n})\nexport class AddCustomerComponent {\n\n  constructor(\n    private customerService: CustomerService,\n    private router: Router){}\n\n  formGroup = new FormGroup({\n    firstName: new FormControl('', Validators.compose([\n      Validators.required,\n      Validators.minLength(3),\n      Validators.maxLength(50)\n    ])),\n    lastName: new FormControl('', Validators.compose([\n      Validators.required,\n      Validators.minLength(3),\n      Validators.maxLength(75)\n    ])),\n    email: new FormControl('', Validators.compose([\n      Validators.required,\n      Validators.email,\n      Validators.minLength(5),\n      Validators.maxLength(100)\n    ]))\n  });\n\n  addCustomer(){\n\n  }\n\n  // Form validations\n  get invalidFirstName(){\n    return this.formGroup.controls.firstName.invalid \n      && (this.formGroup.controls.firstName.dirty || this.formGroup.controls.firstName.touched);\n  }\n\n  get invalidLastName(){\n    return this.formGroup.controls.lastName.invalid \n      && (this.formGroup.controls.lastName.dirty || this.formGroup.controls.lastName.touched);\n  }\n\n  get invalidEmail(){\n    return this.formGroup.controls.email.invalid \n      && (this.formGroup.controls.email.dirty || this.formGroup.controls.email.touched);\n  }\n\n  \n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}